plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'io.kentra'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://packages.confluent.io/maven/'
    }
}

dependencies {
    implementation project(':kentra-lineage-lib')

    implementation("org.springframework.boot:spring-boot-starter-data-jdbc")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-actuator")

    implementation("org.springframework.kafka:spring-kafka")
    implementation("org.testcontainers:kafka")
    implementation("org.apache.commons:commons-compress:1.27.1") // required by testcontainers

    runtimeOnly("org.postgresql:postgresql")
    implementation("io.openlineage:openlineage-java:1.34.0")
    implementation("io.openlineage:openlineage-sql-java:1.34.0")
    implementation("net.ttddyy:datasource-proxy:1.10.1")

    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
    testImplementation("org.springframework.boot:spring-boot-testcontainers")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("net.javacrumbs.json-unit:json-unit-assertj:4.1.1")
    testImplementation("org.testcontainers:postgresql")

    testImplementation("org.wiremock.integrations:wiremock-spring-boot:3.10.0")

    // Lombok
    implementation("org.projectlombok:lombok:1.18.32")
    testImplementation("org.projectlombok:lombok:1.18.32")
    annotationProcessor("org.projectlombok:lombok:1.18.32")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.32")
}

test {
    useJUnitPlatform()
    maxParallelForks = 1
}

bootJar {
    archiveFileName = 'app.jar'
}

